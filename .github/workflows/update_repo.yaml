name: CI/CD for building, packaging and updating the DolphinOS repo

on: 
  workflow_dispatch:
    inputs:
      build_calamares:
        description: 'Build calamares'
        type: boolean

jobs:
  build_packages:
    name: Create and build Arch packages
    runs-on: ubuntu-latest

    permissions:
      contents: write

    container:
      image: archlinux:latest
      options: --privileged

    steps:
    - name: Update packages and install required dependencies for the job
      run: |
        pacman -Syu --noconfirm --needed sudo git base-devel
    - uses: actions/checkout@v3
    - name: Create builduser and install yay for AUR support
      run: |
        useradd builduser -m
        passwd -d builduser
        echo "builduser ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        mkdir buildworkdir
        chown -R builduser buildworkdir
        cd buildworkdir
        sudo -u builduser git clone https://aur.archlinux.org/yay-bin.git
        cd yay-bin
        sudo -u builduser makepkg -si --noconfirm
        sudo -u builduser yay -S --noconfirm cubeb libspng bdf-unifont
    - name: Clone PKGBUILDs repository
      run: |
        cd buildworkdir
        sudo -u builduser git clone https://github.com/DolphinOS-Development/DolphinOS-PKGBUILDs.git
    - name: Build packages
      run: |
        direc="x86_64"
        # if [[ "${{inputs.build_calamares}}" == "false" ]]; then
        #     find "$direc" ! -name "dolphinos-calamares*.pkg.tar.zst" -name "*.pkg.tar.zst" -type f -delete
        #     cfgs="$direc/dolphinos-calamares-configs*.pkg.tar.zst"
        #     if [ -e "$cfgs" ]; then
        #         rm "$cfgs"
        #     fi
        # else
        rm -rf $direc/*.pkg.tar.zst
        # fi
        cd buildworkdir/dolphinos-pkgbuilds
        dirs=($(find * -maxdepth 0 -type d))
        for dir in "${dirs[@]}"
        do 
          if [[  "$dir" != "dolphinos-calamares" ]] || [[ "${{inputs.build_calamares}}" == "true" ]]
          then
            cd "$(pwd)/$dir"
            sudo -u builduser makepkg -s --noconfirm
            cp -v *.pkg.tar.zst $GITHUB_WORKSPACE/x86_64
            cd ..
          fi
        done
    - name: Clean buildworkdir
      run: |
        rm -rf buildworkdir
    - name: Adds packages to the database
      run: |
        repo-add x86_64/dolphinos-repo.db.tar.gz x86_64/*.pkg.tar.zst
    - name: Commit changes and push packages to repo
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config http.postBuffer 3221225472
        git pull
        git add .
        git commit -m "Updated packages"
        git push